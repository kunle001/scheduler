syntax="proto3";

option go_package= "./proto";

package schedule_service;

service ScheduleService{
  rpc CreateSchedule(CreateScheduleRequest) returns (CreateScheduleResponse){};
  rpc CreateTransactionJob(CreateTransactionJobRequest) returns (CreateTransactionJobResponse){};
}


message CreateScheduleRequest{
  string type=1;
  string expiry_date=2;
}

message CreateScheduleResponse{
  string id=1;
  string expiry_date=2;
  string type=3;
  string status =4;
  string created_at=5;
  string updated_at=6;
}


message CreateTransactionJobRequest{
  string beneficiaryAccountNumber=1;
  int32 amount=2;
  string customerAcccountName=3;
  string originatorAccountNumber=4;
  string naration=5;
  string destinationInstitutionName=6;
  string destinationInstitutionCode=7;
  string beneficiaryAccountName=8;
  string end_date=9;
}

message CreateTransactionJobResponse{
  bool success=1;
}

// request from owner of service
message ActivateTransaction{
  string beneficiary_account_number=1;
  int32 amount=2;
  string customer_acccount_name=3;
  string originator_account_number=4;
  string naration=5;
  string destination_institution_name=6;
  string beneficiary_account_name=7;
}


message CreateEndOfMonth{
  
}

message CreateEndOfDay{

}

message CreateDataJob{

}

message CreateAirtimeJob{

}



// protoc --go_out=. --go-grpc_out=. proto/scheduler.proto