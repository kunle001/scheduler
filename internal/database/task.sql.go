// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: task.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createTask = `-- name: CreateTask :one
INSERT INTO tasks (id, status,type,expiry_date,created_at, updated_at)
VALUES($1, $2, $3, $4, $5, $6)
RETURNING id, status, type, expiry_date, created_at, updated_at
`

type CreateTaskParams struct {
	ID         uuid.UUID
	Status     sql.NullString
	Type       sql.NullString
	ExpiryDate sql.NullTime
	CreatedAt  sql.NullTime
	UpdatedAt  sql.NullTime
}

func (q *Queries) CreateTask(ctx context.Context, arg CreateTaskParams) (Task, error) {
	row := q.db.QueryRowContext(ctx, createTask,
		arg.ID,
		arg.Status,
		arg.Type,
		arg.ExpiryDate,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i Task
	err := row.Scan(
		&i.ID,
		&i.Status,
		&i.Type,
		&i.ExpiryDate,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
